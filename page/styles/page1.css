/* Full-screen layout */
* {
    margin: 0px;
    padding: 0px;
}

body {
    height: 100%;
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    font-family: Arial, sans-serif;
    background-color: #121212;
    color: #e0e0e0;
    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.1) 15%, transparent 25%), 
                      linear-gradient(-45deg, rgba(255, 255, 255, 0.1) 15%, transparent 25%);
    background-size: 20px 20px;
    background-position: 0 0, 10px 10px;
    overflow: hidden; /* This disables scrolling */
}

.loadingText {
    font-size: clamp(5vw, 5vw, 50px);
    margin-bottom: 20px;
    text-align: center;
    overflow: hidden;
    white-space: nowrap; /* Prevents text from wrapping by default */
    border-right: 4px solid #af4c4c;
    width: 0; /* Allow the width to adjust based on the container */
    max-width: 60%; /* Set max-width to control the max text length */
    animation: typing 2s steps(40, end) 1s forwards, blink 0.75s step-end infinite;
    position: fixed;
    top: 47vh;
    left: 50vw;
    transform: translate(-50%, -50%);
    word-wrap: break-word; /* Allow wrapping if the text exceeds max-width */
}

@keyframes typing {
    from { width: 0; }
    to { width: 100%; }
}
@keyframes blink {
    0%, 100% { border-color: transparent; }
    50% { border-color: #ffffff; }
}


#clickToContinue {
    display: none;
    justify-content: center; /* Horizontally center the content */
    align-items: center; /* Vertically center the content */
    text-align: center; /* Center the text inside the <p> element */
    opacity: 0;
    position: fixed;
    top: 53vh; /* Adjusted for better centering */
    left: 50%; /* This ensures it's horizontally centered */
    transform: translateX(-50%); /* Offsets the element by half of its width */
    animation: breathAnimation 3s ease-in-out infinite;
}

@keyframes breathAnimation {
    0%, 
    100% { opacity: 0}
    50% { opacity: 1}
}

.fadeOut {
    opacity: 0;
    pointer-events: none; /* Optional: Prevent any interaction while fading */
    transition: opacity 1s ease-out; /* Animates opacity over 1 second */
}

#updateData {
    max-width: 300px;
    width: 30vw;
    padding: 10px;
    margin-bottom: 10px;
    font-size: clamp(14px, 1.2vw, 16px);
    border: 2px solid #af4c4c;
    border-radius: 5px;
    background-color: #1e1e1e;
    color: #e0e0e0;
    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.5);
    position: fixed;
    top: 55vh;
    left: 50vw;
    transform: translate(-50%, -50%);
}

#updateData::placeholder {
    color: #888888;
}

#updateButton {
    width: 20vw;
    max-width: 200px;
    padding: 10px;
    font-size: clamp(14px, 1.5vw, 16px);
    font-weight: bold;
    color: #fff;
    background-color: #af4c4c;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
    transition: background-color 0.3s ease;
    position: fixed;
    top: calc(55vh + 40px); /* Adjusted for responsiveness */
    left: 50vw;
    transform: translate(-50%, -50%);
}

#updateButton:hover {
    background-color: #d86060;
}

/* Media Query for Smaller Screens */
@media (max-width: 768px) {
    body { padding: 10px; }
    footer { padding: 5px; }
    #updateButton { width: 50vw; padding: 8px; }
    #updateData { width: 80vw; }
}


footer {
    background-color: #1e1e1e;
    color: #e0e0e0;
    padding: 10px;
    text-align: center;
    width: 100%;
    position: fixed;
    bottom: 0;
}

footer p {
    margin: 0;
    font-size: clamp(12px, 1vw, 14px);
}

#alertHeader {
    background-color: #121212;
    width: 100vw;
    text-align: center;
    padding: 5px;
}


/* loading animation css */


/* Spinner with rotating gradient */
#loadingSpinner {
    position: absolute;
    top: 35%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 10vw;
    height: 10vw;
    border-radius: 50%;
    background: linear-gradient(45deg, #520029, #2c0058, #00412d, #5c002e, #5a3600, #00445a);
    background-size: 600% 600%;
    animation: spinGradient 9s linear infinite, rotateSpinner 4s linear infinite;
    opacity: 1;
}

/* Rotating the gradient with more phases */
@keyframes spinGradient {
    0%, 100% {
        background-position: 0% 50%;
        opacity: 1;
    }
    25% {
        background-position: 25% 50%;
        opacity: 0.7;
    }
    50% {
        background-position: 50% 50%;
        opacity: 1;
    }
    75% {
        background-position: 75% 50%;
        opacity: 0.7;
    }
}

/* Spinner Rotation */
@keyframes rotateSpinner {
    0% {
        transform: translate(-50%, -50%) rotate(0deg);
    }
    100% {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}